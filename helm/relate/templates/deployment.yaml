apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "relate.fullname" . }}
  namespace: {{ include "relate.namespace" . }}
  labels: {{- include "relate.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "relate.matchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if .Values.podAnnotations }}
      annotations: {{- toYaml .Values.podAnnotations | nindent 8 }}
      {{- end }}
      labels: {{- include "relate.matchLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector: {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations: {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      containers:
        - name: nginx
          image: {{  .Values.nginx.image | default "nginx:latest" }}
          imagePullPolicy: {{  .Values.nginx.pullPolicy | default "IfNotPresent"}}  # Default pull policy if not provided
          volumeMounts:
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: shared-static-data
              mountPath: /var/www/relate/static
          ports:
            - containerPort: 8001
        - name: relate
          command:
              - /run-relate.sh
          image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.repository .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 8000
              name: http
          livenessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: relate
            initialDelaySeconds: 10        
            periodSeconds: 60             
            timeoutSeconds: 300             
            failureThreshold: 30           
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /
              port: http
              httpHeaders:
                - name: Host
                  value: relate
            initialDelaySeconds: 10
            periodSeconds: 160
            timeoutSeconds: 300
            failureThreshold: 30
            successThreshold: 1
          {{- if .Values.resources }}
          resources: {{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.environment }}
          env: {{- toYaml .Values.environment | nindent 12 }}
            - name: HOSTS
              value: relate;{{ .Values.ingress.hostname }};{{ range .Values.ingress.extraHosts }}{{ .name }};{{ end }}
          {{- end }}
          volumeMounts:
            - mountPath: /var/www/relate/git-roots
              name: data
            - name: shared-static-data
              mountPath:  /var/www/relate/static

      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.persistence.existingClaim }}{{ .Values.persistence.existingClaim }}{{- else }}{{ template "relate.fullname" . }}{{- end }}
          {{- else }}
          emptyDir: {{- toYaml .Values.emptyDir | nindent 10 }}
          {{- end  }}
        - name: shared-static-data
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-staticdata
        - name: nginx-config-volume
          configMap:
            name: {{ .Release.Name }}-nginx-config

