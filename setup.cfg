[tool:pytest]
DJANGO_SETTINGS_MODULE = relate.settings
python_files = tests.py test_*.py *_tests.py
markers =
    slow: marks tests as slow (run with '--slow')
    postgres: mark test as postgres specific

[flake8]
ignore = E126,E127,E128,E123,E226,E241,E242,E265,E402,W503
max-line-length=85
exclude=course/migrations,accounts/migrations,static,components,course/mdx_mathjax.py,saml-config/attribute-maps,local_settings.py

inline-quotes = "
docstring-quotes = """
multiline-quotes = """

per-file-ignores =
        tests/*.py:Q000

[mypy]
strict_optional = True
ignore_missing_imports = True
follow_imports=skip
disallow_untyped_calls = True

[mypy-course.migrations.*]
ignore_errors = True

[coverage:run]
source = .
branch=True
cover_pylib=False
omit =
    */.env/*
    */.venv/*
    */virtualenv*/*
    */setuptools*/*
    */migrations/*
    */mdx_mathjax.py
    contrib/*
    exercise-docker.py
    update-attempt-ids.py
    setup.py
    local_settings_example.py
    course/page/code_feedback.py
    course/page/code_run_backend.py
    */wsgi.py
    */tests/*
    */tests.py
    # FIXME: Temporary since this file is now picked up by coverage
    relate/bin/relate.py

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self.debug
    if settings.Debug
    if debug
    debug_print
    if show_log

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # mypy import
    if TYPE_CHECKING:

ignore_errors = True
